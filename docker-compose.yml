version: '3'

services:

  db:
    image: postgres:alpine
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file:
      - db.env
    environment:
      - POSTGRES_HOST=localhost
    labels:
      - "traefik.enable=false"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8585:8080
    depends_on:
      - db
    labels:
      - "traefik.enable=false"

  redis:
    image: redis:alpine
    restart: always
    volumes:
      - redisdata:/data
    labels:
      - "traefik.enable=false"

  app:
    build: ./app
    restart: always
    env_file:
      - app.env
    volumes:
      - nextcloud:/var/www/html
      - ./appdata/config:/var/www/html/config
      - ./appdata/custom_apps:/var/www/html/custom_apps
      - ./appdata/data:/var/www/html/data
    depends_on:
      - db
      - redis

  web:
    image: nginx:alpine
    restart: always
    volumes:
      - ./web/ssl:/etc/ssl/nginx:ro
      - ./web/mysite.template:/etc/nginx/conf.d/mysite.template
      - ./web/nginx.conf:/etc/nginx/nginx.conf
      - nextcloud:/var/www/html
      - ./appdata/custom_apps:/var/www/html/custom_apps
    env_file:
      - web.env
    command: /bin/sh -c "envsubst '$${NGINX_HOST}' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    depends_on:
      - app
    networks:
      - web
      - default
    labels:
      - "traefik.backend=web"
      - "traefik.docker.network=web"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:store.homemademess.com,stro.homemademess.com"
      - "traefik.frontend.entryPoints=https"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.port=443"
      - "traefik.protocol=https"

volumes:
  db:
  redisdata:
  nextcloud:

networks:
  web:
    external: true
